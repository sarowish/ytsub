name: Continuous Deployment

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-13
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set the release version
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --profile release-lto --target ${{ matrix.target }}

      - name: Prepare assets
        shell: bash
        run: |
          mkdir ytsub-${{ env.RELEASE_VERSION }}
          cp LICENSE README.md target/${{ matrix.target }}/release-lto/ytsub \
            ytsub-${{ env.RELEASE_VERSION }}

      - name: Package assets
        shell: bash
        run: |
          if [ "${{ matrix.config.OS }}" = "windows-latest" ]; then
            7z a -tzip ytsub-${{ env.RELEASE_VERSION }}-${{ matrix.target }}.zip \
              ytsub-${{ env.RELEASE_VERSION }}
          else
            tar czvf ytsub-${{ env.RELEASE_VERSION }}-${{ matrix.target }}.tar.gz \
              ytsub-${{ env.RELEASE_VERSION }}
          fi

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          files: ytsub-${{ env.RELEASE_VERSION }}-${{ matrix.target }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-cargo:
    name: Publish on crates.io
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Publish
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
